Харківський національний університет радіоелектроніки
Факультет комп'ютерних наук
Кафедра програмної інженерії
ЗВІТ
з дисципліни "Аналіз та рефакторинг коду"
до лабораторної роботи №1
на тему: "Розробка Vision & Scope"





Виконав ст. гр. ПЗПІ-22-2 
Терновий Данііл Павлович 

Ст. викл. кафедри ПІ 
Сокорчук Ігор Петрович









Харків 2024
МЕТА РОБОТИ
      
      Метою лабораторної роботи є розробка документа Vision&Scope, який описує програмний продук. У процесі виконання роботи необхідно чітко визначити вимоги до системи. Документ має стати основою для подальших етапів розробки програмного забезпечення, забезпечуючи чітке розуміння його цілей та обсягу.
      
ВИСНОВКИ

      Результатом роботи став написаний Vision&Scope документ, який описує потреби у даній предметній області та аналізує її проблеми. Також було описана функціональність серверної частини та вимоги щодо задіяних технологій. 

ДОДАТОК А
Опис проекту в форматі Vision & Scope 

Vision & Scope
 документ
для
ChefMate. Система для оптимізації меню та замовлень у закладах харчування
Схвалено версію 1.0
Виконав : Даніїл Терновий Павлович
ПЗПІ-22-2
20.10.2024
Зміст


1 БІЗНЕС-ВИМОГИ	1
1.1 Предумови	1
1.2 Аналіз аналогічних рішень	1
1.3 Монетизація	1
2 КОНЦЕПЦІЯ РІШЕННЯ	2
2.1 Призначення системи	2
2.2  Бізнес-логіка системи	2
3 ОПИС ФУНКЦІОНАЛЬНОСТІ	3
3.1 Опис функціональності серверної частини	3
3.2 Опис функціональності веб-частини	3
4 ЗАДІЯНІ ТЕХНОЛОГІЇ	4
4.1 Опис задіяних технологій	4





Історія версій


Ім'я
Дата
Причина змін
Версія
ChefMate
20.10.24

1.0








1 БІЗНЕС-ВИМОГИ
     1.1 Предумови
      
      Ресторанний бізнес стикається з викликами в обслуговуванні клієнтів, зокрема, через потребу у швидкому обробленні замовлень, аналізі уподобань клієнтів, та оптимізації обслуговування. Затримки у прийманні замовлень, неузгодженість у передачі інформації між кухнею та офіціантами, відсутність сучасних способів оплати створюють додаткові труднощі для ресторанних закладів, що може вплинути на якість обслуговування, знижувати кількість постійних клієнтів та потенційно негативно відображатися на прибутковості.
      
1.2  Аналіз аналогічних рішень
      
      На ринку існують кілька рішень для автоматизації обслуговування в ресторанах, які включають POS-системи для приймання та обробки замовлень, програми для інтеграції платежів, та додатки з аналітикою для ресторанного бізнесу. Серед відомих продуктів — Toast POS, Square for Restaurants і Lightspeed.  Ці рішення пропонують інтеграцію POS з управлінням замовленнями та аналітикою, однак можуть бути складними у налаштуванні та інтеграції для малих і середніх закладів. 
      Крім того, більшість рішень націлені переважно на POS і можуть не охоплювати потребу в IoT інтеграції для реального часу відображення замовлень на кухні.

1.3  Монетизація

      Монетизація може здійснюватися через:
–	Місячну передплату для доступу до платформи управління замовленнями та аналітики.
–	Транзакційні збори за кожну онлайн оплату.
–	Разові платежі за налаштування IoT обладнання та інтеграцію.


2 КОНЦЕПЦІЯ РІШЕННЯ
2.1  Призначення системи
       
      Система спрямована на підвищення ефективності ресторанного обслуговування, управління замовленнями в режимі реального часу та забезпечення якісної взаємодії між клієнтами та ресторанним персоналом. Основною метою є автоматизація процесів, зокрема управління меню, приймання замовлень, обробка платежів та відображення замовлень у режимі реального часу на різних етапах обслуговування.
      
2.2  Бізнес-логіка системи

      Бізнес-логіка виглядає наступним чином:
– Клієнти отримують доступ до меню через QR-код, переглядають меню на мобільних пристроях, додають замовлення, оплачують онлайн та залишають відгуки.
– Офіціанти отримують повідомлення про нові замовлення та статуси приготування, можуть приймати замовлення через мобільний додаток, а також переглядати відгуки клієнтів для покращення обслуговування.
– Кухонний персонал отримує замовлення в режимі реального часу, що з’являються на IoT – дисплеях на кухні, із зазначенням пріоритетності. Система може також допомагати кухні у зборі аналітики для оптимізації процесів.
– Адміністратори ресторану отримують доступ до платформи для управління меню, відстеження замовлень у реальному часі, аналітики замовлень та трендів уподобань клієнтів.

3 ОПИС ФУНКЦІОНАЛЬНОСТІ
3.1  Опис функціональності серверної частини
      
      Серверна частина відповідає за обробку та управління замовленнями, обробку платежів, аналіз трендів замовлень та уподобань клієнтів, а також синхронізацію даних 
між різними частинами системи (мобільний додаток, IoT-дисплеї та панель адміністратора). 

      Серверна частина забезпечує функціонал для:
– Управління меню. CRUD-операції для створення, оновлення та видалення позицій меню.
– Обробки замовлень. Прийняття та збереження замовлень, оновлення статусу, передача замовлень на консольний клієнт, який симулює дію POS прилада (наприклад монітора замовлення, або черга страв до приготування).
– Аналітики та звітності. Збір даних про замовлення, генерація звітів та аналіз популярності меню.
– Інтеграції з платіжними системами. Захищені операції для обробки оплат та підтвердження платежів.

3.2 Опис функціональності веб-частини

      Веб – частина має надавати можливість відображати інтерфейс для можливості управління основними даними, наприклад: меню, замовлення, відгуки клієнтів. Переважно цією частиною додатку будуть користуватись адміністратори. Також, однією із задач веб-частини буде забезпечення відображення замовлень та аналітики у режимі реального часу. 
      Також, використовуючи веб – частину, у адміністраторів буде можливість створювати робочі акаунти з доступом до різних функцій, в залежності від ролі користувача.
 


4  ЗАДІЯНІ ТЕХНОЛОГІЇ 
     4.1 Опис задіяних технологій
      
      В проекті буде використано:
– React.js для веб-інтерфейсу з використанням SignalR для управління замовленнями в режимі реального часу, аналітики замовлень та системи знижок.
– Kotlin для мобільного додатка, який буде відображати меню, профіль та функцію залишення відгуків.
– IoT: Консольний застосунок на основі .NET для симуляції роботи POS приладів.
– ASP.NET Core для розробки платформи управління замовленнями в реальному часі, RabbitMQ для обробки черги замовлень, бази даних MS SQL для збереження замовлень, аналітики та управління меню.




